openapi: 3.0.0
info:
  title: Buy-now, Pay-later  Eligibility API
  description: |
    This OpenAPI description provides an example of endpoints controlling eligibility of products and customers for a buy-now, pay-later (BNPL) API. The multiple operations allow eCommerce platforms to facilitate eligibility checks on behalf of customers for various products.
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
  contact:
    email: frank.kilcommins@smartbear.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html  
servers:
  - url: http://host.docker.internal:8085
tags:
  - name: Eligibility
    description: Allows a customer or product to be checked for eligibility
  - name: Auth
    description: Simple authentication for example purposes
  - name: Legal
    description: Legal requirements relating to Buy Now Pay Later products
paths:
  /auth:
    get: 
      summary: Get customer authorisation
      description: |
        Used to initiate authentication of the End User and authorisation by the customer.
        
        Mimics an OAuth 2.0 style redirect, but cutdown for the purpose of an example.
      tags: 
       - Auth
      operationId: getAuthorization
      parameters:
        - name: authorizationToken
          in: query
          description: Authorization token value elicited from loan initiation endpoint
          required: true
          schema:
            $ref: '#/components/schemas/AuthorizationToken'
      responses:
        "200":
          description: Instruction to redirect End User, based on validation of the authorisation token
          headers:
            Location:
              description: URL to which the customer is redirected
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
  /customers:
    post:
      summary: Create a customer
      description: |
        Create a customer for a BNPL loan if they are eligible for the loan in question.

        If a customer is eligible a customer resource is created, a 201 returned, and the a link to the customer resource returned.

        If the customer is not eligible a 200 is returned and a reason code indicating why the customer was rejected.
      tags:
       - Eligibility
      operationId: createCustomer
      requestBody:
        description: The customer properties
        content:
          application/json:
            schema:
              allOf:
                 - $ref: '#/components/schemas/CustomerProperties'
                 - description: Terms and conditions have been reviewed and accepted
                   type: object
                   required:
                     - termsAndConditionsAccepted
                   properties:
                     termsAndConditionsAccepted:
                      type: boolean
      responses:
        "201":
          description: Customer resource has been created and can be linked to loan transaction
          content:
            application/json:
              schema:
                type: object
                required:
                  - customerId
                  - links
                properties:
                  customerId:
                    description: Unique identifier for the newly created customer resource
                    type: string
                  links:
                    type: object
                    required:
                      - self
                    properties:
                      self:
                        $ref: '#/components/schemas/CustomerUri'
                    additionalProperties: false
                additionalProperties: false
        "200":
          description: Customer is not eligible for BNPL loan
          content:
            application/json:
              schema:
                type: object
                required:
                  - reasonCode
                properties:
                  reasonCode:
                    type: string
                    example: Class A credit rating
                additionalProperties: false
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                missingBodyProperty:
                  $ref: '#/components/examples/missing-body-property'
                missingBodyPropertyWithErrors:
                  $ref: '#/components/examples/missing-body-property-with-errors'
                missingRequestParameter:
                  $ref: '#/components/examples/missing-request-parameter'
                missingRequestParameterWithErrors:
                  $ref: '#/components/examples/missing-request-parameter-with-errors'
                missingRequestHeader:
                  $ref: '#/components/examples/missing-request-header'
                missingRequestHeaderWithErrors:
                  $ref: '#/components/examples/missing-request-header-with-errors'
                invalidBodyPropertyFormat:
                  $ref: '#/components/examples/invalid-body-property-format'
                invalidBodyPropertyFormatWithErrors:
                  $ref: '#/components/examples/invalid-body-property-format-with-errors'
                invalidRequestParameterFormat:
                  $ref: '#/components/examples/invalid-request-parameter-format'
                invalidRequestParameterFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-parameter-format-with-errors'
                invalidRequestHeaderFormat:
                  $ref: '#/components/examples/invalid-request-header-format'
                invalidRequestHeaderFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-header-format-with-errors'
                invalidBodyPropertyValue:
                  $ref: '#/components/examples/invalid-body-property-value'
                invalidBodyPropertyValueWithErrors:
                  $ref: '#/components/examples/invalid-body-property-value-with-errors'
                invalidRequestParameterValue:
                  $ref: '#/components/examples/invalid-request-parameter-value'
                invalidRequestParameterValueWithErrors:
                 $ref: '#/components/examples/invalid-request-parameter-value-with-errors'                
        default:
          $ref: '#/components/responses/ErrorResponse'
  /products:
    post:
      summary: Retrieve eligible products
      description: |
        Retrieve the list of products that are eligible for a buy-now, pay-later loan.

        Implemented as a not particularly RESTful, RPC-style post operation for simplicity
      tags:
       - Eligibility
      operationId: findEligibleProducts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - products
              properties:
                customer:
                  $ref: '#/components/schemas/CustomerUri'
                products:
                  $ref: '#/components/schemas/Products'
              additionalProperties: false
      responses:
        "200":
          description: |
            List of eligible products with information for subsequent steps
          content:
            application/json:
              schema:
                type: object
                required:
                  - productCodes
                properties:
                  existingCustomerNotEligible:
                    description: Flag to indicate existing customer found and is eligible. Associated workflows will stop if this flag is returned
                    type: boolean
                  productCodes:
                    description: This list of product codes that are eligible for a BNPL loan. Allows merchant to render screen showing matching products. Array will be empty if customer not eligible
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductCode'
                  eligibilityCheckRequired:
                    description: Indicates whether the customer needs to be checked for eligibility. Required for new customers
                    type: boolean
                    default: false
                  totalAmount:
                    description: The total loan value for the products that are eligible
                    allOf:
                      - $ref: '#/components/schemas/CurrencyAndAmount'
                additionalProperties: false
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                missingBodyProperty:
                  $ref: '#/components/examples/missing-body-property'
                missingBodyPropertyWithErrors:
                  $ref: '#/components/examples/missing-body-property-with-errors'
                missingRequestParameter:
                  $ref: '#/components/examples/missing-request-parameter'
                missingRequestParameterWithErrors:
                  $ref: '#/components/examples/missing-request-parameter-with-errors'
                missingRequestHeader:
                  $ref: '#/components/examples/missing-request-header'
                missingRequestHeaderWithErrors:
                  $ref: '#/components/examples/missing-request-header-with-errors'
                invalidBodyPropertyFormat:
                  $ref: '#/components/examples/invalid-body-property-format'
                invalidBodyPropertyFormatWithErrors:
                  $ref: '#/components/examples/invalid-body-property-format-with-errors'
                invalidRequestParameterFormat:
                  $ref: '#/components/examples/invalid-request-parameter-format'
                invalidRequestParameterFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-parameter-format-with-errors'
                invalidRequestHeaderFormat:
                  $ref: '#/components/examples/invalid-request-header-format'
                invalidRequestHeaderFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-header-format-with-errors'
                invalidBodyPropertyValue:
                  $ref: '#/components/examples/invalid-body-property-value'
                invalidBodyPropertyValueWithErrors:
                  $ref: '#/components/examples/invalid-body-property-value-with-errors'
                invalidRequestParameterValue:
                  $ref: '#/components/examples/invalid-request-parameter-value'
                invalidRequestParameterValueWithErrors:
                 $ref: '#/components/examples/invalid-request-parameter-value-with-errors'                
        default:
          $ref: '#/components/responses/ErrorResponse'
  /terms-and-conditions:
    get:
      summary: Retrieve the terms and conditions for BNPL products
      description: >
        Retrieve the terms and conditions for BNPL products.
        
        For the sake of this example:
        
        * There is one set of customer T&Cs.

        * There is one error response, defined using the `default` keyword.
      tags: 
       - Legal
      operationId: getTermsAndConditions
      responses:
        "200":
          description: The terms and conditions document as an array of `string` values
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                minItems: 1
                example:
                  - "You must be over 18 to apply for a loan"
                  - "You must be a resident of the EU"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                missingBodyProperty:
                  $ref: '#/components/examples/missing-body-property'
                missingBodyPropertyWithErrors:
                  $ref: '#/components/examples/missing-body-property-with-errors'
                missingRequestParameter:
                  $ref: '#/components/examples/missing-request-parameter'
                missingRequestParameterWithErrors:
                  $ref: '#/components/examples/missing-request-parameter-with-errors'
                missingRequestHeader:
                  $ref: '#/components/examples/missing-request-header'
                missingRequestHeaderWithErrors:
                  $ref: '#/components/examples/missing-request-header-with-errors'
                invalidBodyPropertyFormat:
                  $ref: '#/components/examples/invalid-body-property-format'
                invalidBodyPropertyFormatWithErrors:
                  $ref: '#/components/examples/invalid-body-property-format-with-errors'
                invalidRequestParameterFormat:
                  $ref: '#/components/examples/invalid-request-parameter-format'
                invalidRequestParameterFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-parameter-format-with-errors'
                invalidRequestHeaderFormat:
                  $ref: '#/components/examples/invalid-request-header-format'
                invalidRequestHeaderFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-header-format-with-errors'
                invalidBodyPropertyValue:
                  $ref: '#/components/examples/invalid-body-property-value'
                invalidBodyPropertyValueWithErrors:
                  $ref: '#/components/examples/invalid-body-property-value-with-errors'
                invalidRequestParameterValue:
                  $ref: '#/components/examples/invalid-request-parameter-value'
                invalidRequestParameterValueWithErrors:
                 $ref: '#/components/examples/invalid-request-parameter-value-with-errors'                
        default:
          $ref: '#/components/responses/ErrorResponse'
components:
  responses:
    ErrorResponse:
      description: The error response details, encoded in the ProblemDetails format (RFC9457)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
  examples:
    missing-body-property:
      description: Representation of a 400 Bad Request response where a rquired `body` property was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-body-property
        status: "400"
        title: Missing body property
        detail: The request is missing an expected body property.
        code: 400-09
        
    missing-body-property-with-errors:
      description: Representation of a 400 Bad Request response where a rquired `body` property was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-body-property
        status: "400"
        title: Missing body property
        detail: The request is missing an expected body property.
        code: 400-09
        errors:
          - detail: The body property {name} is required.
            pointer: "/name"
        
    missing-request-parameter:
      description: Representation of a 400 Bad Request response where a `query` or `path` parameter was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-request-parameter
        status: "400"
        title: Missing request parameter
        detail: The request is missing an expected query or path parameter.
        code: 400-03
        
    missing-request-parameter-with-errors:
      description: Representation of a 400 Bad Request response where a `query` or `path` parameter was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-request-parameter
        status: "400"
        title: Missing request parameter
        detail: The request is missing an expected query or path parameter.
        code: 400-03
        errors:
          - detail: The query parameter {name} is required.
            parameter: name
            
    missing-request-header:
      description: Representation of a 400 Bad Request response where a `header` parameter was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-request-header
        status: "400"
        title: Missing request header
        detail: The request is missing an expected HTTP request header.
        code: 400-02
        
    missing-request-header-with-errors:
      description: Representation of a 400 Bad Request response where a `header` parameter was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-request-header
        status: "400"
        title: Missing request header
        detail: The request is missing an expected HTTP request header.
        code: 400-02
        errors:
          - detail: The header {Accept} is required
            header: Accept

    invalid-body-property-format:
      description: Representation of a 400 Bad Request response where a body property does not leverage the correct format
      value:
        type: https://problems-registry.smartbear.com/invalid-body-property-format
        status: "400"
        title: Invalid Body Property Format
        detail: The request body contains a malformed property.
        code: 400-04
        
    invalid-body-property-format-with-errors:
      description: Representation of a 400 Bad Request response where a body property does not leverage the correct format
      value:
        type: https://problems-registry.smartbear.com/invalid-body-property-format
        status: "400"
        title: Invalid Body Property Format
        detail: The request body contains a malformed property.
        code: 400-04
        errors:
          - detail: Must be a positive integer
            pointer: "/quantity"
            
    invalid-request-parameter-format:
      description: Representation of a 400 Bad Request response where a query or path parameter is malformed.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-parameter-format
        status: "400"
        title: Invalid Request Parameter Format
        detail: The request contains a malformed query parameter.
        code: 400-05
        
    invalid-request-parameter-format-with-errors:
      description: Representation of a 400 Bad Request response where a query or path parameter is malformed.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-parameter-format
        status: "400"
        title: Invalid Request Parameter Format
        detail: The request contains a malformed query parameter.
        code: 400-05
        errors:
          - detail: The expected string values are ASC or DSC
            parameter: sort
            
    invalid-request-header-format:
      description: Representation of a 400 Bad Request response where request header provided was malformed
      value:
        type: https://problems-registry.smartbear.com/invalid-request-header-format
        status: "400"
        title: Invalid Request Header Format
        detail: The request contains a malformed request header parameter.
        code: 400-06
        
    invalid-request-header-format-with-errors:
      description: Representation of a 400 Bad Request response where a query or path parameter is malformed.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-header-format
        status: "400"
        title: Invalid Request Header Format
        detail: The request contains a malformed request header parameter.
        code: 400-06
        errors:
          - detail: The request header was malformed
            header: Accept            

    invalid-body-property-value:
      description: Representation of a 400 Bad Request response where the request body contains a invalid property value
      value:
        type: https://problems-registry.smartbear.com/invalid-body-property-value
        status: "400"
        title: Invalid Body Property Value
        detail: The request body contains an invalid body property value.
        code: 400-07
        
    invalid-body-property-value-with-errors:
      description: Representation of a 400 Bad Request response where the request body contains a invalid property value
      value:
        type: https://problems-registry.smartbear.com/invalid-body-property-value
        status: "400"
        title: Invalid Body Property Value
        detail: The request body contains an invalid body property value.
        code: 400-07
        errors:
          - detail: A value `Never` is an invalid. Please provide `monthly` or `quarterly`
            pointer: "#/marketingCommunication/frequency"
            
    invalid-request-parameter-value:
      description: Representation of a 400 Bad Request response where the request contains a invalid query or path parameter value.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-parameter-value
        status: "400"
        title: Invalid Request Parameter Value
        detail: The request body contains an invalid request parameter value.
        code: 400-08
        
    invalid-request-parameter-value-with-errors:
      description: Representation of a 400 Bad Request response where the request contains a invalid query or path parameter value.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-parameter-value
        status: "400"
        title: Invalid Request Parameter Value
        detail: The request body contains an invalid request parameter value.
        code: 400-08
        errors:
          - detail: The value `top-down` is not a valid sort parameter value. The expected string values are `ASC` or `DSC`
            parameter: sort
                       
  schemas:
    AuthorizationToken:
      description: An authorisation token used to tee up a customer for authentication and authorisation of the loan as required
      type: string
      format: uuid
    CustomerProperties:
      type: object
      required:
        - firstName
        - lastName
        - dateOfBirth
        - postalCode
      properties:
        firstName:
          description: First name of customer
          type: string
          minLength: 1
          maxLength: 70
          example: Joe
        lastName:
          description: Last name of customer
          type: string
          minLength: 1
          maxLength: 70
          example: Bloggs
        dateOfBirth:
          description: Customer date of birth
          type: string
          format: date
          example: 1970-01-15
        postalCode:
          description: Zip code or postal code of customer
          type: string
          minLength: 1
          maxLength: 70
          example: PC1235X
      additionalProperties: false
    CustomerUri:
      description: The URI that identifies the customer resource for the loan transaction
      type: string
      format: uri
    ProductCode:
      description: Product code for loan application. Required for eligibility check
      type: string
      example: 1AX73431
    ProblemDetails:
      type: object
      required:
        - type
      properties:
        type:
          description: The problem type, expressed as a URI
          type: string
        status:
          description: The HTTP return code generated by the server
          type: string
          pattern: "^[1-5][0-9]{2}$"
        title:
          description: The title of the problem, designed to be consumed by humans
          type: string
        detail:
          description: A verbose error message, designed to be consumed by humans
          type: string
        instance:
          description: A URI that identifies a specific occurrence of the problem
          type: string
      additionalProperties: true
    CurrencyAndAmount:
      description: Amount and currency code
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          description: Currency code
          type: string
          pattern: "^[A-Z]{3}$"
          example: EUR
        amount:
          description: Amount
          type: number
          example: 500
    Products:
      type: array
      minItems: 1
      items:
        type: object
        required:
        - productCode
        properties:
          merchantCategoryCode:
            description: Merchant category code of merchant. Only required for marketplace eCommerce platforms
            type: string
            pattern: '^[0-9]{4}$'
          productCode:
            $ref: '#/components/schemas/ProductCode'
          purchaseAmount:
            description: Product purchase amount and currency code
            allOf:
              - $ref: '#/components/schemas/CurrencyAndAmount'