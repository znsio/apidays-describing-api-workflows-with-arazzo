openapi: 3.0.0
info:
  title: Buy-now, Pay-later Loan API
  description: |
    This OpenAPI description provides an example of a buy-now, pay-later (BNPL) Loan API
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
  contact:
    email: frank.kilcommins@smartbear.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html  
servers:
  - url: http://host.docker.internal:8084
tags:
  - name: Loan Initiation
    description: Allows a loan to initiated and finalized
paths:
  /loan-transactions:
    post:
      summary: Initiate a new loan transaction
      description: |
        Initiate a new loan based on customer details and in-scope products.

        For the sake of this example:

        * There is one error response, defined using the `default` keyword.
      tags: 
        - Loan Initiation
      operationId: createBnplTransaction
      requestBody:
        content:
          application/json:
            schema:
              description: Properties for the loan. the `enrolledCustomer` and `newCustomer` properties are required to support the two different sources in the calling Arazzo description
              type: object
              required:
                - products
                - totalAmount
              properties:
                enrolledCustomer:
                  $ref: '#/components/schemas/CustomerUri'
                newCustomer:
                  $ref: '#/components/schemas/CustomerUri'
                products:
                  description: Product codes for products included in loan. Supplied to ensure any special terms are included in loan agreement
                  type: array
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/ProductCode'
                totalAmount:
                  $ref: '#/components/schemas/CurrencyAndAmount'
      responses:
        "202":
          description: New loan initiated. This may require authorization before it is finalized
          content:
            application/json:
              schema:
                type: object
                required:
                  - loanTransactionId
                  - links
                properties:
                  redirectAuthToken:
                    description: A token that allows the loan to be completed without further authorisation. Is omitted if authentication and authorisation by the End User is required
                    example: 123e4567-e89b-12d3-a456-426614174000
                  loanTransactionId:
                    $ref: '#/components/schemas/LoanTransactionId'
                  links:
                    type: object
                    required:
                      - self
                    properties:                      
                      self:
                        description: Link to this resource
                        type: string
                    additionalProperties: false
                additionalProperties: false
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                missingBodyProperty:
                  $ref: '#/components/examples/missing-body-property'
                missingBodyPropertyWithErrors:
                  $ref: '#/components/examples/missing-body-property-with-errors'
                missingRequestParameter:
                  $ref: '#/components/examples/missing-request-parameter'
                missingRequestParameterWithErrors:
                  $ref: '#/components/examples/missing-request-parameter-with-errors'
                missingRequestHeader:
                  $ref: '#/components/examples/missing-request-header'
                missingRequestHeaderWithErrors:
                  $ref: '#/components/examples/missing-request-header-with-errors'
                invalidBodyPropertyFormat:
                  $ref: '#/components/examples/invalid-body-property-format'
                invalidBodyPropertyFormatWithErrors:
                  $ref: '#/components/examples/invalid-body-property-format-with-errors'
                invalidRequestParameterFormat:
                  $ref: '#/components/examples/invalid-request-parameter-format'
                invalidRequestParameterFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-parameter-format-with-errors'
                invalidRequestHeaderFormat:
                  $ref: '#/components/examples/invalid-request-header-format'
                invalidRequestHeaderFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-header-format-with-errors'
                invalidBodyPropertyValue:
                  $ref: '#/components/examples/invalid-body-property-value'
                invalidBodyPropertyValueWithErrors:
                  $ref: '#/components/examples/invalid-body-property-value-with-errors'
                invalidRequestParameterValue:
                  $ref: '#/components/examples/invalid-request-parameter-value'
                invalidRequestParameterValueWithErrors:
                 $ref: '#/components/examples/invalid-request-parameter-value-with-errors'                
        default:
          $ref: '#/components/responses/ErrorResponse'
  /loan-transactions/{loanTransactionId}:
    parameters:
      - $ref: '#/components/parameters/loanTransactionId'
    get:
      summary: Retrieve loan
      description: Retrieve the finalised BNPL loan transaction with all installments
      tags: 
        - Loan Initiation      
      operationId: retrieveBnplLoanTransaction
      responses:
        "200":
          description: Details of the loan transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanTransaction'
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                missingBodyProperty:
                  $ref: '#/components/examples/missing-body-property'
                missingBodyPropertyWithErrors:
                  $ref: '#/components/examples/missing-body-property-with-errors'
                missingRequestParameter:
                  $ref: '#/components/examples/missing-request-parameter'
                missingRequestParameterWithErrors:
                  $ref: '#/components/examples/missing-request-parameter-with-errors'
                missingRequestHeader:
                  $ref: '#/components/examples/missing-request-header'
                missingRequestHeaderWithErrors:
                  $ref: '#/components/examples/missing-request-header-with-errors'
                invalidBodyPropertyFormat:
                  $ref: '#/components/examples/invalid-body-property-format'
                invalidBodyPropertyFormatWithErrors:
                  $ref: '#/components/examples/invalid-body-property-format-with-errors'
                invalidRequestParameterFormat:
                  $ref: '#/components/examples/invalid-request-parameter-format'
                invalidRequestParameterFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-parameter-format-with-errors'
                invalidRequestHeaderFormat:
                  $ref: '#/components/examples/invalid-request-header-format'
                invalidRequestHeaderFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-header-format-with-errors'
                invalidBodyPropertyValue:
                  $ref: '#/components/examples/invalid-body-property-value'
                invalidBodyPropertyValueWithErrors:
                  $ref: '#/components/examples/invalid-body-property-value-with-errors'
                invalidRequestParameterValue:
                  $ref: '#/components/examples/invalid-request-parameter-value'
                invalidRequestParameterValueWithErrors:
                 $ref: '#/components/examples/invalid-request-parameter-value-with-errors'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /loan-transactions/{loanTransactionId}/status:
    parameters:
      - $ref: '#/components/parameters/loanTransactionId'
    patch:
      summary: Update loan status
      description: Update the loan status to indicate order fulfilled and loan is active
      tags: 
        - Loan Initiation      
      operationId: updateBnplLoanTransactionStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  $ref: '#/components/schemas/LoanTransactionStatuses'
              additionalProperties: false
      responses:
        "204":
          description: Update to status acknowledged and applied to loan transaction
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                missingBodyProperty:
                  $ref: '#/components/examples/missing-body-property'
                missingBodyPropertyWithErrors:
                  $ref: '#/components/examples/missing-body-property-with-errors'
                missingRequestParameter:
                  $ref: '#/components/examples/missing-request-parameter'
                missingRequestParameterWithErrors:
                  $ref: '#/components/examples/missing-request-parameter-with-errors'
                missingRequestHeader:
                  $ref: '#/components/examples/missing-request-header'
                missingRequestHeaderWithErrors:
                  $ref: '#/components/examples/missing-request-header-with-errors'
                invalidBodyPropertyFormat:
                  $ref: '#/components/examples/invalid-body-property-format'
                invalidBodyPropertyFormatWithErrors:
                  $ref: '#/components/examples/invalid-body-property-format-with-errors'
                invalidRequestParameterFormat:
                  $ref: '#/components/examples/invalid-request-parameter-format'
                invalidRequestParameterFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-parameter-format-with-errors'
                invalidRequestHeaderFormat:
                  $ref: '#/components/examples/invalid-request-header-format'
                invalidRequestHeaderFormatWithErrors:
                  $ref: '#/components/examples/invalid-request-header-format-with-errors'
                invalidBodyPropertyValue:
                  $ref: '#/components/examples/invalid-body-property-value'
                invalidBodyPropertyValueWithErrors:
                  $ref: '#/components/examples/invalid-body-property-value-with-errors'
                invalidRequestParameterValue:
                  $ref: '#/components/examples/invalid-request-parameter-value'
                invalidRequestParameterValueWithErrors:
                 $ref: '#/components/examples/invalid-request-parameter-value-with-errors'        
        default:
          $ref: '#/components/responses/ErrorResponse'
components:
  parameters:
    loanTransactionId:
      name: loanTransactionId
      description: Unique identifier for a given loan agreement
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/LoanTransactionId'
  responses:
    ErrorResponse:
      description: The error response details, encoded in the ProblemDetails format (RFC9457)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
  
  examples:
    missing-body-property:
      description: Representation of a 400 Bad Request response where a rquired `body` property was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-body-property
        status: "400"
        title: Missing body property
        detail: The request is missing an expected body property.
        code: 400-09
        
    missing-body-property-with-errors:
      description: Representation of a 400 Bad Request response where a rquired `body` property was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-body-property
        status: "400"
        title: Missing body property
        detail: The request is missing an expected body property.
        code: 400-09
        errors:
          - detail: The body property {name} is required.
            pointer: "/name"
        
    missing-request-parameter:
      description: Representation of a 400 Bad Request response where a `query` or `path` parameter was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-request-parameter
        status: "400"
        title: Missing request parameter
        detail: The request is missing an expected query or path parameter.
        code: 400-03
        
    missing-request-parameter-with-errors:
      description: Representation of a 400 Bad Request response where a `query` or `path` parameter was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-request-parameter
        status: "400"
        title: Missing request parameter
        detail: The request is missing an expected query or path parameter.
        code: 400-03
        errors:
          - detail: The query parameter {name} is required.
            parameter: name
            
    missing-request-header:
      description: Representation of a 400 Bad Request response where a `header` parameter was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-request-header
        status: "400"
        title: Missing request header
        detail: The request is missing an expected HTTP request header.
        code: 400-02
        
    missing-request-header-with-errors:
      description: Representation of a 400 Bad Request response where a `header` parameter was omitted by the consumer.
      value:
        type: https://problems-registry.smartbear.com/missing-request-header
        status: "400"
        title: Missing request header
        detail: The request is missing an expected HTTP request header.
        code: 400-02
        errors:
          - detail: The header {Accept} is required
            header: Accept

    invalid-body-property-format:
      description: Representation of a 400 Bad Request response where a body property does not leverage the correct format
      value:
        type: https://problems-registry.smartbear.com/invalid-body-property-format
        status: "400"
        title: Invalid Body Property Format
        detail: The request body contains a malformed property.
        code: 400-04
        
    invalid-body-property-format-with-errors:
      description: Representation of a 400 Bad Request response where a body property does not leverage the correct format
      value:
        type: https://problems-registry.smartbear.com/invalid-body-property-format
        status: "400"
        title: Invalid Body Property Format
        detail: The request body contains a malformed property.
        code: 400-04
        errors:
          - detail: Must be a positive integer
            pointer: "/quantity"
            
    invalid-request-parameter-format:
      description: Representation of a 400 Bad Request response where a query or path parameter is malformed.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-parameter-format
        status: "400"
        title: Invalid Request Parameter Format
        detail: The request contains a malformed query parameter.
        code: 400-05
        
    invalid-request-parameter-format-with-errors:
      description: Representation of a 400 Bad Request response where a query or path parameter is malformed.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-parameter-format
        status: "400"
        title: Invalid Request Parameter Format
        detail: The request contains a malformed query parameter.
        code: 400-05
        errors:
          - detail: The expected string values are ASC or DSC
            parameter: sort
            
    invalid-request-header-format:
      description: Representation of a 400 Bad Request response where request header provided was malformed
      value:
        type: https://problems-registry.smartbear.com/invalid-request-header-format
        status: "400"
        title: Invalid Request Header Format
        detail: The request contains a malformed request header parameter.
        code: 400-06
        
    invalid-request-header-format-with-errors:
      description: Representation of a 400 Bad Request response where a query or path parameter is malformed.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-header-format
        status: "400"
        title: Invalid Request Header Format
        detail: The request contains a malformed request header parameter.
        code: 400-06
        errors:
          - detail: The request header was malformed
            header: Accept            

    invalid-body-property-value:
      description: Representation of a 400 Bad Request response where the request body contains a invalid property value
      value:
        type: https://problems-registry.smartbear.com/invalid-body-property-value
        status: "400"
        title: Invalid Body Property Value
        detail: The request body contains an invalid body property value.
        code: 400-07
        
    invalid-body-property-value-with-errors:
      description: Representation of a 400 Bad Request response where the request body contains a invalid property value
      value:
        type: https://problems-registry.smartbear.com/invalid-body-property-value
        status: "400"
        title: Invalid Body Property Value
        detail: The request body contains an invalid body property value.
        code: 400-07
        errors:
          - detail: A value `Never` is an invalid. Please provide `monthly` or `quarterly`
            pointer: "#/marketingCommunication/frequency"
            
    invalid-request-parameter-value:
      description: Representation of a 400 Bad Request response where the request contains a invalid query or path parameter value.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-parameter-value
        status: "400"
        title: Invalid Request Parameter Value
        detail: The request body contains an invalid request parameter value.
        code: 400-08
        
    invalid-request-parameter-value-with-errors:
      description: Representation of a 400 Bad Request response where the request contains a invalid query or path parameter value.
      value:
        type: https://problems-registry.smartbear.com/invalid-request-parameter-value
        status: "400"
        title: Invalid Request Parameter Value
        detail: The request body contains an invalid request parameter value.
        code: 400-08
        errors:
          - detail: The value `top-down` is not a valid sort parameter value. The expected string values are `ASC` or `DSC`
            parameter: sort
            
  schemas:
    CustomerUri:
      description: The URI that identifies the customer resource for the loan transaction
      type: string
      format: uri
    LoanTransaction:
      description: Details of the loan transaction including product codes, total amount and repayment schedule
      type: object
      required:
        - customer
        - products
        - totalAmount
        - paymentSchedule
      properties:
        customer:
          description: Link to customer resource
          type: string
          format: uri
        products:
          description: List of products and purchase amounts included in BNPL loan transaction
          allOf:
            - $ref: '#/components/schemas/Products'
        status:
          $ref: '#/components/schemas/LoanTransactionStatuses'
        totalAmount:
          description: The total loan amount including interest
          allOf:
            - $ref: '#/components/schemas/CurrencyAndAmount'
        paymentSchedule:
          description: Schedule of payments for loan repayment
          type: array
          minItems: 1
          items:
            type: object
            required:
              - paymentDate
              - amount
              - lastPayment
            properties:
              paymentDate:
                description: The date on which the payment is due
                type: string
                format: date
                example: 2025-03-17
              amount:
                description: The currency and amount due
                allOf:
                  - $ref: '#/components/schemas/CurrencyAndAmount'
              lastPayment:
                description: Indicator of whether this is the last payment that completes the loan repayment
                type: boolean
                default: false
            additionalProperties: false
      additionalProperties: false
    LoanTransactionStatuses:
      description: |
        Loan transaction status values. Explanation

        * Pending: Loan transaction is pending authorisation by the End User
        * Finalised: Loan transaction has been finalised and is awaiting completion
        * Completed: Loan transaction has been issued following completion of order and payments will be collected

      type: string
      enum:
        - Pending
        - Finalised
        - Completed
    LoanTransactionId:
      description: Type for unique loan identifier
      type: string
      example: de6f8a0a-f093-484f-9dda-e6fd4a57bfc0
    ProductCode:
      description: Product code for loan application. Required for eligibility check
      type: string
      example: 1AX34568C
    ProblemDetails:
      type: object
      required:
        - type
      properties:
        type:
          description: The problem type, expressed as a URI
          type: string
        status:
          description: The HTTP return code generated by the server
          type: string
          pattern: "^[1-5][0-9]{2}$"
        title:
          description: The title of the problem, designed to be consumed by humans
          type: string
        detail:
          description: A verbose error message, designed to be consumed by humans
          type: string
        instance:
          description: A URI that identifies a specific occurrence of the problem
          type: string
        code:
          type: string
          description: An API specific error code aiding the provider team understand the error based on their own potential taxonomy or registry.
          maxLength: 50          
      additionalProperties: true
    CurrencyAndAmount:
      description: Amount and currency code
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          description: Currency code
          type: string
          pattern: "^[A-Z]{3}$"
          example: EUR
        amount:
          description: Amount
          type: number
          example: 799
    Products:
      type: array
      minItems: 1
      items:
        type: object
        required:
        - productCode
        properties:
          merchantCategoryCode:
            description: Merchant category code of merchant. Only required for marketplace eCommerce platforms
            type: string
            pattern: '^[0-9]{4}$'
            example: "3471"
          productCode:
            $ref: '#/components/schemas/ProductCode'
          purchaseAmount:
            description: Product purchase amount and currency code
            allOf:
              - $ref: '#/components/schemas/CurrencyAndAmount'